import React, { Component } from "react";
import { Form, Button, Alert } from "react-bootstrap";
import { signup } from "../services/auth";

export default class Signup extends Component {
  state = {
    username: "",
    password: "",
    message: "",
    languagesSpoken: [],
    languagesToLearn: [],
    description: "",
  };

  handleChange = (event) => {
    const { name, value } = event.target;
    this.setState({
      [name]: value,
    });
  };

  spokenLanguageChanges = (event) => {
    event.preventDefault();
    let value = [];
    for (let i = 0; i < event.target.options.length; i++) {
      if (event.target.options[i].selected) {
        value.push(event.target.options[i].value);
        console.log("this is the value from the if", value);
      }
    }
    this.setState({
      languagesSpoken: value,
    });
    console.log(
      "this is the state languages spoken? ",
      this.state.languagesSpoken,
      "this is the value:",
      value
    );
  };

  languagesToLearnChanges = (event) => {
    event.preventDefault();
    let value = [];
    for (let i = 0; i < event.target.options.length; i++) {
      if (event.target.options[i].selected) {
        value.push(event.target.options[i].value);
      }
    }
    this.setState({
      languagesToLearn: value,
    });
  };

  handleSubmit = (event) => {
    event.preventDefault();
    const {
      username,
      password,
      languagesSpoken,
      languagesToLearn,
      description,
    } = this.state;
    signup(
      username,
      password,
      languagesSpoken,
      languagesToLearn,
      description
    ).then((data) => {
      console.log(data);
      if (data.message) {
        this.setState({
          message: data.message,
          username: username,
          password: "",
          languagesSpoken: languagesSpoken,
          languagesToLearn: languagesToLearn,
          description: description,
        });
      } else {
        // now we need to put the user in the user key of the state of App.js
        this.props.setUser(data);
        // redirect to /projects
        this.props.history.push("/home");
      }
    });
    console.log(this.state);
  };

  render() {
    return (
      <>
        <h2>Signup</h2>
        <Form onSubmit={this.handleSubmit}>
          <Form.Group>
            <Form.Label htmlFor="username">Username: </Form.Label>
            <Form.Control
              type="text"
              name="username"
              value={this.state.username}
              onChange={this.handleChange}
              id="username"
            />
          </Form.Group>
          <Form.Group>
            <Form.Label htmlFor="password">Password: </Form.Label>
            <Form.Control
              type="password"
              name="password"
              value={this.state.password}
              onChange={this.handleChange}
              id="password"
            />
          </Form.Group>
          <Form.Group>
            <Form.Label>I speak the following languages:</Form.Label>
            <Form.Control
              as="select"
              multiple
              name="languagesSpoken"
              value={this.state.languagesSpoken}
              onChange={this.spokenLanguageChanges}
            >
              <option value="ğŸ‡¬ğŸ‡§ English"> ğŸ‡¬ğŸ‡§ English</option>
              <option value="ğŸ‡©ğŸ‡ª German">ğŸ‡©ğŸ‡ª German</option>
              <option value="ğŸ‡«ğŸ‡· French">ğŸ‡«ğŸ‡· French</option>
              <option value="ğŸ‡®ğŸ‡ª Italian">ğŸ‡®ğŸ‡ª Italian</option>
              <option value="ğŸ‡¦ğŸ‡ª Arabic">ğŸ‡¦ğŸ‡ª Arabic</option>
              <option value="ğŸ‡¨ğŸ‡³ Mandarin">ğŸ‡¨ğŸ‡³ Mandarin</option>
              <option value="ğŸ‡®ğŸ‡³ Hindi">ğŸ‡®ğŸ‡³ Hindi </option>
              <option value="ğŸ‡¹ğŸ‡· Turkish">ğŸ‡¹ğŸ‡· Turkish</option>
              <option value="ğŸ‡µğŸ‡¹ Portuguese">ğŸ‡µğŸ‡¹ Portuguese</option>
              <option value="ğŸ‡ªğŸ‡¸ Spanish">ğŸ‡ªğŸ‡¸ Spanish</option>
              <option value="ğŸ‡¬ğŸ‡· Greek">ğŸ‡¬ğŸ‡· Greek</option>
              <option value="ğŸ‡·ğŸ‡º Russian">ğŸ‡·ğŸ‡º Russian</option>
              <option value="ğŸ‡¯ğŸ‡µ Japanese">ğŸ‡¯ğŸ‡µ Japanese</option>
              <option value="ğŸ‡§ğŸ‡¬ Bulgarian">ğŸ‡§ğŸ‡¬ Bulgarian</option>
              <option value="ğŸ‡°ğŸ‡· Korean">ğŸ‡°ğŸ‡· Korean</option>
              <option value="ğŸ‡¦ğŸ‡² Armenian">ğŸ‡¦ğŸ‡² Armenian</option>
              <option value="ğŸ‡±ğŸ‡º Dutch">ğŸ‡±ğŸ‡º Dutch</option>
              <option value="ğŸ‡µğŸ‡° Urdu">ğŸ‡µğŸ‡° Urdu</option>
            </Form.Control>
          </Form.Group>
          <Form.Group>
            <Form.Label>I want to learn the following languages:</Form.Label>
            <Form.Control
              as="select"
              multiple
              name="languagesToLearn"
              value={this.state.languagesToLearn}
              onChange={this.languagesToLearnChanges}
            >
              <option value="ğŸ‡¬ğŸ‡§ English">ğŸ‡¬ğŸ‡§ English</option>
              <option value="ğŸ‡©ğŸ‡ª German">ğŸ‡©ğŸ‡ª German</option>
              <option value="ğŸ‡«ğŸ‡· French">ğŸ‡«ğŸ‡· French</option>
              <option value="ğŸ‡®ğŸ‡ª Italian">ğŸ‡®ğŸ‡ª Italian</option>
              <option value="ğŸ‡¦ğŸ‡ª Arabic">ğŸ‡¦ğŸ‡ª Arabic</option>
              <option value="ğŸ‡¨ğŸ‡³ Mandarin">ğŸ‡¨ğŸ‡³ Mandarin</option>
              <option value="ğŸ‡®ğŸ‡³ Hindi">ğŸ‡®ğŸ‡³ Hindi </option>
              <option value="ğŸ‡¹ğŸ‡· Turkish">ğŸ‡¹ğŸ‡· Turkish</option>
              <option value="ğŸ‡µğŸ‡¹ Portuguese">ğŸ‡µğŸ‡¹ Portuguese</option>
              <option value="ğŸ‡ªğŸ‡¸ Spanish">ğŸ‡ªğŸ‡¸ Spanish</option>
              <option value="ğŸ‡¬ğŸ‡· Greek">ğŸ‡¬ğŸ‡· Greek</option>
              <option value="ğŸ‡·ğŸ‡º Russian">ğŸ‡·ğŸ‡º Russian</option>
              <option value="ğŸ‡¯ğŸ‡µ Japanese">ğŸ‡¯ğŸ‡µ Japanese</option>
              <option value="ğŸ‡§ğŸ‡¬ Bulgarian">ğŸ‡§ğŸ‡¬ Bulgarian</option>
              <option value="ğŸ‡°ğŸ‡· Korean">ğŸ‡°ğŸ‡· Korean</option>
              <option value="ğŸ‡¦ğŸ‡² Armenian">ğŸ‡¦ğŸ‡² Armenian</option>
              <option value="ğŸ‡±ğŸ‡º Dutch">ğŸ‡±ğŸ‡º Dutch</option>
              <option value="ğŸ‡µğŸ‡° Urdu">ğŸ‡µğŸ‡° Urdu</option>
            </Form.Control>
          </Form.Group>
          <Form.Group>
            <Form.Label htmlFor="description">
              Tell us a little bit about yourself:
            </Form.Label>
            <Form.Control
              type="text"
              name="description"
              value={this.state.description}
              onChange={this.handleChange}
              id="description"
            />
          </Form.Group>
          {this.state.message && (
            <Alert variant="danger">{this.state.message}</Alert>
          )}
          <Button type="submit">Join our community</Button>
        </Form>
      </>
    );
  }
}
